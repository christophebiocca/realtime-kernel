Train Control Workflow
======================

User -> Control:
    Move train `t` from `here` to `there`.

Control:
    No engineer for `t`. Creating one at `here`.

Engineer:
    Hello Control.
    Creating TimeKeeper.
    Planning optimal route to `there`. Until destination is reached:
        Tell Control primary and secondary expectation.

        Calculating minimum of following:
            - Maximal time to primary expectation
            - Time to next turnout - Time to stop at current speed
            - Time to next update of position to control

    Compute timeout to stop. Then stop.

Engineer -> TimeKeeper:
    Tell me when the minimum time computed above is hit.

Sensor -> Control:
    Sensor `s` hit.

Control -> Engineer:
    Lookup based on primary and secondary expecation.
    Tell Engineer which expectation was met.

Engineer <- Control:
    if not primary:
        remove primary from node graph

    update expectations. Ignore timeout for primary expectation.

Engineer <- TimeKeeper (primary timeout):
    Flip table!

Engineer <- TimeKeeper (turnout):
    Tell control what position we need the turnout to be in
    If control says no can do:
        # won't need this until TC2 with reservation system
        Slow down
        Set turnout timeout to what we need for slower speed
        Try again later
    Else:
        Full speed ahead

Engineer <- TimeKeeper (update):
    Tell control where we are.

Control <- Engineer (turnout request):
    Lookup reservations, see if request can be met
    If so, perform request and update table on screen

Control <- Engineer (update):
    Update train position on screen
